<?php
/**
 * Clean Video Player Page
 * @var \Laminas\View\Renderer\PhpRenderer $this
 * @var \Omeka\Api\Representation\MediaRepresentation $media
 */

$escape = $this->plugin('escapeHtml');
$translate = $this->plugin('translate');

// Set page title
$this->headTitle($media->displayTitle() . ' - ' . $translate('Video Player'));
?>

<div class="clean-video-player-page">
    <div class="video-header">
        <h1><?= $escape($media->displayTitle()) ?></h1>
    </div>

    <div class="main-video-player">
        <?php
        // Enhanced video playback with optimal settings for slider functionality
        echo $media->render([
            'width' => '100%',
            'height' => '500',
            'controls' => true,
            'preload' => 'metadata',
            'class' => 'main-video-element enhanced-video-player'
        ]);
        ?>
    </div>


</div>

<style>
.clean-video-player-page {
    max-width: 1000px;
    margin: 0 auto;
    padding: 2rem;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    line-height: 1.6;
}

.video-header {
    text-align: center;
    margin-bottom: 2.5rem;
    padding-bottom: 1.5rem;
    border-bottom: 2px solid #e9ecef;
}

.video-header h1 {
    margin: 0;
    font-size: 2.5rem;
    color: #2c3e50;
    font-weight: 300;
    letter-spacing: -0.5px;
}

.main-video-player {
    margin-bottom: 2.5rem;
    text-align: center;
    background: #000;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    transition: box-shadow 0.3s ease;
}

.main-video-player:hover {
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.2);
}

.main-video-player video {
    width: 100%;
    height: auto;
    display: block;
    outline: none;
}

/* Enhanced video controls for better slider functionality */
.enhanced-video-player {
    background: #000;
}

.enhanced-video-player::-webkit-media-controls-panel {
    background-color: rgba(0, 0, 0, 0.8);
}

.enhanced-video-player::-webkit-media-controls-timeline {
    background-color: rgba(255, 255, 255, 0.3);
    border-radius: 2px;
    margin-left: 7px;
    margin-right: 7px;
}

.enhanced-video-player::-webkit-media-controls-current-time-display,
.enhanced-video-player::-webkit-media-controls-time-remaining-display {
    color: white;
    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.5);
}



/* Loading state for video */
.main-video-player video:not([src]) {
    background: linear-gradient(45deg, #f0f0f0 25%, transparent 25%),
                linear-gradient(-45deg, #f0f0f0 25%, transparent 25%),
                linear-gradient(45deg, transparent 75%, #f0f0f0 75%),
                linear-gradient(-45deg, transparent 75%, #f0f0f0 75%);
    background-size: 20px 20px;
    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
    animation: loading 1s linear infinite;
}

@keyframes loading {
    0% { background-position: 0 0, 0 10px, 10px -10px, -10px 0px; }
    100% { background-position: 20px 20px, 20px 30px, 30px 10px, 10px 20px; }
}

/* Focus states for accessibility */
.main-video-player video:focus {
    outline: 3px solid #007bff;
    outline-offset: 2px;
}

/* Responsive design */
@media (max-width: 768px) {
    .clean-video-player-page {
        padding: 1rem;
    }

    .video-header {
        margin-bottom: 2rem;
        padding-bottom: 1rem;
    }

    .video-header h1 {
        font-size: 2rem;
    }

    .main-video-player {
        margin-bottom: 2rem;
        border-radius: 8px;
    }


}

@media (max-width: 480px) {
    .clean-video-player-page {
        padding: 0.5rem;
    }

    .video-header h1 {
        font-size: 1.75rem;
    }


}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Enhanced video player functionality for better slider support
    const video = document.querySelector('.enhanced-video-player');

    if (video) {
        // Ensure video metadata is loaded for proper slider functionality
        video.addEventListener('loadstart', function() {
            console.log('Video loading started');
        });

        video.addEventListener('loadedmetadata', function() {
            console.log('Video metadata loaded - slider should now work');
            // Force a small delay to ensure everything is ready
            setTimeout(function() {
                if (video.duration && video.duration > 0) {
                    console.log('Video duration:', video.duration, 'seconds');
                    // Video is ready for seeking
                    video.setAttribute('data-ready', 'true');
                }
            }, 100);
        });

        video.addEventListener('canplay', function() {
            console.log('Video can start playing');
        });

        video.addEventListener('error', function(e) {
            console.error('Video error:', e);
        });

        // Handle seeking events
        video.addEventListener('seeking', function() {
            console.log('Video seeking to:', video.currentTime);
        });

        video.addEventListener('seeked', function() {
            console.log('Video seeked to:', video.currentTime);
        });

        // Ensure the video loads metadata immediately
        if (video.readyState < 1) {
            video.load();
        }
    }
});
</script>
